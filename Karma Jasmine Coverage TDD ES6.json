[[1581647029508,"h1","Karma Jasmine Coverage TDD ES6"],[1581647841252,"p","Karma Jasmine Coverage TDD ES6"],[1581647841442,"html","git clone https://github.com/federicozacayan/webpack-karma-starter.git ."],[1581647841617,"p","src/index.js"],[1581647841787,"javascript","function test(a) {\n    if (typeof a !== 'boolean') {\n        throw new Error('must be boolean');\n    }\n    return a;\n}\nexport default test;\nclass A\n{\n    run(){\n        return true\n    }\n}\nexport {A};"],[1581647978727,"p","src/index.spec.js"],[1581647029211,"javascript","import test, {A} from './';\n\ndescribe('Testing File index.html', () => {\n    \n    it('Test else way', () => {\n        expect(test(true)).toBeTruthy();\n    })\n    \n    it('Get an Exeption', () => {\n        expect(() => {test('wrong');})\n        .toThrowError(Error, 'must be boolean');\n    })\n    \n    it('Get true', ()=>{\n        let a = new A;\n        expect(a.run()).toBe(true);\n    })\n    \n    it('Get False', ()=>{\n        let a = new A;\n        expect(!a.run()).toBeFalsy();\n        \n    })\n    \n    it('How many time it was called', ()=>{\n        let a = new A;\n        var spy = spyOn(a, 'run');\n        a.run()\n        expect(spy).toHaveBeenCalledTimes(1);\n        \n    })\n})"]]